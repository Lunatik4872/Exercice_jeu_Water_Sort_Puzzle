$C = [vert, orange, vide]
$Nombre_tube = 3
$K = 3
$Nombre_etage = 4
$ETATS = [0..$K]

p(0,1,1,vert)
p(0,1,2,orange)
p(0,1,3,vert)
p(0,1,4,orange)
p(0,2,1,vert)
p(0,2,2,vert)
p(0,2,3,vert)
p(0,2,4,vide)
p(0,3,1,vide)
p(0,3,2,vide)
p(0,3,3,vide)
p(0,3,4,vide)


;; Un etage contien une couleur au minimum

bigand $i in $ETATS:
	bigand $t in [1..$Nombre_tube]: 
		bigand $e in [1..$Nombre_etage]: 
			bigor $c in $C:
				p($i,$t,$e,$c)
			end
		end
	end
end

;; Un etage contien une couleur au maximum 

bigand $i in $ETATS:
	bigand $t in [1..$Nombre_tube]: 
		bigand $e in [1..$Nombre_etage]: 
			bigand $c1 in $C:
				bigand $c2 in $C when $c1 != $c2: 
					not(p($i,$t,$e,$c1) and p($i,$t,$e,$c2))
				end
			end
		end
	end
end

;; Regarde si un etage est vide si c'est le cas alors tout ceux au dessus le sont aussi

bigand $i in $ETATS :
	bigand $t in [1..$Nombre_tube]: 
		bigand $e in [1..$Nombre_etage-1]:
			p($i,$t,$e,vide) => p($i,$t,$e+1,vide)
		end
	end
end

;; Definition du but 
bigand $t in [1..$Nombre_tube]: 
	bigand $e in [1..$Nombre_etage-1]:
		bigand $c in $C :
			p($K,$t,$e,$c) => p($K,$t,$e+1,$c)
		end
	end
end